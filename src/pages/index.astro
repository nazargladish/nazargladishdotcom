---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Socials from "@/components/Socials.astro";
import Card from "@/components/Card.astro";
import Hr from "@/components/Hr.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { SITE } from "@/config";
import { SOCIALS } from "@/constants";
const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);
---

<Layout>
  <main id="main-content" data-layout="index">
    <header class="header">
      <h1 class="site-title">Nazar Gladish</h1>
      {
        // only display if at least one social link is enabled
        SOCIALS.length > 0 && <Socials />
      }
    </header>

    <section id="hero">
      <p>
        I’m a web guy passionate about building meaningful products and
        delivering quality work that makes an impact. I’m currently exploring
        full-time role — feel free to <a href="mailto:hi@nazargladish.com"
          >mail me</a
        >.<br /><br />

        I’ve worked at <a href="https://antiwork.com" target="_blank"
          >Antiwork</a
        > and other companies shaping the future of sales and collaboration. I broke
        into tech at 18 after applying to 500 jobs and teaching myself what I needed.
        <br /><br />

        Outside work, I enjoy cycling, writing, and creating projects that
        inspire me.
      </p>

      <Hr />
    </section>

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured</h2>
            <ul>
              {featuredPosts.map(data => (
                <Card {...data} />
              ))}
            </ul>
          </section>
          {recentPosts.length > 0 && <Hr />}
        </>
      )
    }

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent Posts</h2>
          <ul>
            {recentPosts.map(
              (data, index) => index < SITE.postPerIndex && <Card {...data} />
            )}
          </ul>
        </section>
      )
    }
  </main>
</Layout>

<script>
  document.addEventListener("astro:page-load", () => {
    const indexLayout = (document.querySelector("#main-content") as HTMLElement)
      ?.dataset?.layout;
    if (indexLayout) {
      sessionStorage.setItem("backUrl", "/");
    }
  });
</script>

<style>
  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 0;
  }
  .site-title {
    font-size: 1.5em;
    margin: 0;
  }
</style>
